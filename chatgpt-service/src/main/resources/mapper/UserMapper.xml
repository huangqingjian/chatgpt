<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chatgpt.mapper.UserMapper" >
    <resultMap id="BaseResultMap" type="com.chatgpt.domain.User" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="mobile" property="mobile" jdbcType="VARCHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="face" property="face" jdbcType="VARCHAR" />
        <result column="sex" property="sex" jdbcType="TINYINT" />
        <result column="desc" property="desc" jdbcType="VARCHAR" />
        <result column="type" property="type" jdbcType="TINYINT" />
        <result column="create_by" property="createBy" jdbcType="BIGINT" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_by" property="updateBy" jdbcType="BIGINT" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="deleted" property="deleted" jdbcType="TINYINT" />
    </resultMap>
    <sql id="Base_Column_List" >
        `id`,
        `name`,
        `face`,
        `sex`,
        `mobile`,
        `email`,
        `desc`,
        `type`,
        `password`,
        `create_by`,
        `create_time`,
        `update_by`,
        `update_time`,
        `deleted`
    </sql>
    <select id="selectByQuery" resultMap="BaseResultMap" parameterType="com.chatgpt.bean.UserQueryBean" >
        select
        <include refid="Base_Column_List" />
        from tbl_User
        where deleted = 0
        <if test="q != null">
            and (`name` like concat(#{q,jdbcType=VARCHAR}, '%') or `mobile` like concat(#{q,jdbcType=VARCHAR}, '%'))
        </if>
        <if test="type != null">
            and `type` = #{type,jdbcType=TINYINT}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select
        <include refid="Base_Column_List" />
        from tbl_User
        where id = #{id,jdbcType=BIGINT}
        and deleted = 0
    </select>
    <select id="selectByPrimaryKeys" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from tbl_User
        where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id,jdbcType=BIGINT}
        </foreach>
        and deleted = 0
    </select>
    <select id="selectByMobile" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        from tbl_User
        where mobile = #{mobile,jdbcType=VARCHAR}
        and deleted = 0
    </select>
    <select id="selectByMobileAndType" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from tbl_User
        where mobile = #{mobile,jdbcType=VARCHAR}
        and `type` = #{type,jdbcType=TINYINT}
        and deleted = 0
    </select>
    <update id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        update tbl_User
        set deleted = 1
        where id = #{id,jdbcType=BIGINT}
        and deleted = 0
    </update>
    <insert id="insertUser" parameterType="com.chatgpt.domain.User" useGeneratedKeys="true" keyProperty="id">
        insert into tbl_User
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="name != null" >
                `name`,
            </if>
            <if test="face != null" >
                `face`,
            </if>
            <if test="sex != null" >
                `sex`,
            </if>
            <if test="mobile != null" >
                `mobile`,
            </if>
            <if test="email != null" >
                `email`,
            </if>
            <if test="desc != null" >
                `desc`,
            </if>
            <if test="type != null" >
                `type`,
            </if>
            <if test="password != null" >
                `password`,
            </if>
            <if test="createBy != null" >
                `create_by`,
            </if>
            <if test="updateBy != null" >
                `update_by`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="name != null" >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="face != null" >
                #{face,jdbcType=VARCHAR},
            </if>
            <if test="sex != null" >
                #{sex,jdbcType=TINYINT},
            </if>
            <if test="mobile != null" >
                #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="email != null" >
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="desc != null" >
                #{desc,jdbcType=VARCHAR},
            </if>
            <if test="type != null" >
                #{type,jdbcType=TINYINT},
            </if>
            <if test="password != null" >
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null" >
                #{createBy,jdbcType=BIGINT},
            </if>
            <if test="updateBy != null" >
                #{updateBy,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="updateUser" parameterType="com.chatgpt.domain.User" >
        update tbl_User
        <set>
            <if test="name != null" >
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="face != null" >
                `face` = #{face,jdbcType=VARCHAR},
            </if>
            <if test="sex != null" >
                `sex` = #{sex,jdbcType=TINYINT},
            </if>
            <if test="mobile != null" >
                `mobile` = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="email != null" >
                `email` = #{email,jdbcType=VARCHAR},
            </if>
            <if test="desc != null" >
                `desc` = #{desc,jdbcType=VARCHAR},
            </if>
            <if test="type != null" >
                `type` = #{type,jdbcType=TINYINT},
            </if>
            <if test="password != null" >
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="updateBy != null" >
                `update_by` = #{updateBy,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

</mapper>
